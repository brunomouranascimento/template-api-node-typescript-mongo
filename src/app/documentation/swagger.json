{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Node.js template API",
    "description": "This is a documentation of Node.js template API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3333",
  "basePath": "/v1/user",
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints for users in the system"
    },
    {
      "name": "Tenants",
      "description": "Endpoints for tenants in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/users/authenticate": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Authenticates a user in API, and generate a token",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User data that we want to authenticate",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User data that we want to authenticate",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Show all users",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User data that we want to authenticate",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "patch": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/tenants/create": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Creates a new tenant",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User data that we want to authenticate",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/tenants/{id}": {
      "patch": {
        "tags": [
          "Tenants"
        ],
        "summary": "Update a new tenant",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User data that we want to authenticate",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/tenants": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Show all tenants",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User data that we want to authenticate",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/tenants/{id}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Get tenant with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete tenant with given ID",
        "tags": [
          "Tenants"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "patch": {
        "summary": "Update tenant with give ID",
        "tags": [
          "Tenants"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}
